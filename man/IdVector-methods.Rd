% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AllGenerics.R, R/AllMethods.R,
%   R/IdVector-class.R
\docType{methods}
\name{IdVector-methods}
\alias{IdVector-methods}
\alias{ids<-}
\alias{ids,IdVector-method}
\alias{ids<-,IdVector-method}
\alias{names,IdVector-method}
\alias{names<-,IdVector,ANY-method}
\alias{names<-,IdVector-method}
\alias{length,IdVector-method}
\alias{duplicated,IdVector-method}
\alias{[,IdVector,ANY,ANY,ANY-method}
\alias{[,IdVector-method}
\alias{as.vector.IdVector}
\alias{as.vector}
\alias{as.character.IdVector}
\alias{as.character}
\alias{as.IdVector.default}
\alias{as.IdVector}
\title{Methods for \code{IdVector} objects}
\usage{
ids(object) <- value

\S4method{ids}{IdVector}(object)

\S4method{ids}{IdVector}(object) <- value

\S4method{names}{IdVector}(x)

\S4method{names}{IdVector,ANY}(x) <- value

\S4method{length}{IdVector}(x)

\S4method{duplicated}{IdVector}(x, incomparables = FALSE, ...)

\S4method{[}{IdVector,ANY,ANY,ANY}(x, i, j, ..., drop = TRUE)

\method{as.vector}{IdVector}(x, mode = "character")

\method{as.character}{IdVector}(x, ...)

as.IdVector.default(ids, ...)
}
\arguments{
\item{object, x}{An object of class inheriting from \code{\linkS4class{IdVector}}.}

\item{value}{An object of a class specified in the S4 method signature.}

\item{incomparables}{Ignored.}

\item{i}{index specifying elements to extract or replace.}

\item{j, ..., drop}{Ignored.}

\item{mode}{Atomic type of the \code{\link[=vector]{vector()}} returned.
character string naming an atomic mode or "list" or "expression" or (except for vector) "any".}

\item{ids}{An atomic vector of identifiers.}
}
\description{
This page documents the S4 generics and methods defined for objects inheriting of the \code{\linkS4class{IdVector}} class.
The \code{IdVector} class directly extends \code{\linkS4class{Vector}} and thus inherits of all methods defined for the parent class.
In the usage below, \code{object} and \code{x} represent an object of class inheriting from \code{\linkS4class{IdVector}},
and \code{value} is an object of a class specified in the S4 method signature or as outlined in 'Accessors'.
}
\section{Accessors}{

\code{ids(object)} returns a \code{character} vector of element identifiers.
\code{names(object)} is a synonym for compatibility with S4 methods such as \code{mcols(object, use.names = TRUE, ...) }.
}

\section{Dimensions}{

\code{length(x)} returns the number of elements in \code{x}.
}

\section{Subsetting}{

\code{x[i]} returns new \code{\linkS4class{IdVector}} object of the same class as \code{x} made of the elements selected by \code{i}. \code{i} can be missing; an NA-free logical, numeric, or character vector or factor (as ordinary vector or \code{\link{Rle}} object); or an \code{\link[=IntegerRanges-class]{IntegerRanges}} object.
}

\section{Coercion}{

\code{as(x, "vector")} and \code{as.vector(x)} return an atomic vector of identifiers contained in \code{x}.


\code{as(x, "vector")} and \code{as.vector(x)} return a \code{character} vector of identifiers contained in \code{x}.


\code{as(object, "IdVector")} and \code{as.IdVector(object)} return an \code{IdVector} from the given atomic vector of identifiers.
}

\examples{
# Constructor ----

iv <- IdVector(ids=head(LETTERS, 6))
mcols(iv) <- DataFrame(row.names = ids(iv), field1=runif(length(iv)))
iv

# Accessors ----

ids(iv)
iv1 <- iv
ids(iv1)[1] <- "gene1"

names(iv)
iv1 <- iv
names(iv1)[1] <- "GENE001"

# Dimensions ----

length(iv)

# Duplication ----

iv1 <- iv[c(1, 1, 2, 2)]
duplicated(iv1)
unique(iv1)

iv1 <- iv[1:3]
iv2 <- iv[2:4]
union(iv1, iv2)

# Subsetting ----

iv1 <- iv[1:5]
iv1

# Coercion from IdVector ----

v1 <- as(iv, "vector")
c1 <- as(iv, "character")
}
\seealso{
\code{\linkS4class{IdVector}}, \code{\linkS4class{Vector}}, \code{\link{Vector-setops}}.
}
\author{
Kevin Rue-Albrecht
}
